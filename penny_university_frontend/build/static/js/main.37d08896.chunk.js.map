{"version":3,"sources":["models/user.ts","selectors/user.ts","selectors/entities.ts","models/chat.ts","selectors/chats.ts","selectors/pagination.ts","middleware/api.ts","models/schemas.ts","constants/index.ts","actions/chat.ts","actions/user.ts","reducers/paginate.ts","reducers/user.ts","middleware/logging.ts","helpers/cookie.ts","components/modal/constants.ts","components/modal/dispatch.ts","middleware/user.ts","reducers/index.ts","components/fields/input.tsx","components/modal/auth/email.tsx","components/modal/auth/password.tsx","components/modal/auth/signup.tsx","components/modal/auth/verify.tsx","components/modal/index.tsx","components/buttons/index.tsx","components/dropdown/index.tsx","components/nav/index.tsx","components/alerts/index.tsx","components/Date.tsx","components/content/Content.tsx","components/content/EditContent.tsx","components/follow-ups/FollowUpUserInfo.tsx","components/follow-ups/FollowUpCard.tsx","components/chats/ChatDetail.tsx","components/chats/ParticipantList.tsx","components/chats/ChatCard.tsx","components/chats/ChatList.tsx","pages/Chats.tsx","components/private-route/index.tsx","pages/ChatDetail.tsx","pages/Profile.tsx","pages/Verify.tsx","App.tsx","index.tsx"],"names":["User","data","id","NaN","firstName","lastName","url","email","this","pk","Number","isNaN","getUserStore","store","user","getToken","token","getAuthed","getUser","getChats","state","entities","chats","getFollowUps","followUps","getUsers","users","getUserByID","Chat","title","date","description","followups","participants","find","p","toString","role","getUserRole","getChatByID","chat","selectEntities","sort","a","b","getFollowupsForChatID","pagination","followUpsByChat","ids","map","getPaginationStore","isFetchingChats","key","pager","chatsByFilter","isFetching","getChatsPagination","filter","chatsPagination","next","CALL_API","api","action","type","endpoint","payload","responseSchema","schema","types","method","meta","getState","Error","Array","isArray","length","every","requestType","successType","failureType","indexOf","process","jsonPayload","JSON","stringify","decamelizeKeys","headers","Authorization","fetch","body","then","response","ok","Promise","reject","camelJson","status","json","camelizeKeys","catch","callApi","selectors","metaWithPagination","results","count","previous","result","error","message","userSchema","Entity","idAttribute","processStrategy","value","mergeStrategy","chatSchema","followUpSchema","pennyChat","followUp","Schemas","CHAT","CHAT_ARRAY","USER","USER_ARRAY","FOLLOW_UP","FOLLOW_UP_ARRAY","Routes","Profile","Chats","ChatDetail","Home","VerifyEmail","ApiRoutes","userProfile","login","register","logout","exists","chatDetail","userChats","userID","resendEmail","verifyEmail","Actions","loadChatsList","nextPageUrl","setToken","fetchUser","paginationInitialState","all","union","Set","paginate","mapActionToKey","t","requestTypes","successTypes","failureTypes","updatePagination","undefined","includes","normalize","resultIds","initialState","newState","logging","Cookies","CookieHelper","getCookie","name","nameEQ","ca","document","cookie","split","i","c","charAt","substring","setCookie","expiration","expires","Date","setTime","getTime","toUTCString","deleteCookie","deleteToken","deleteUser","setUser","clearCookies","ModalNames","CLOSE_MODAL","OPEN_MODAL","modalDispatch","_dispatch","call","func","open","mount","dispatch","unmount","auth","authSignup","props","authPassword","close","checkAuth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","ChatActions","UserActions","combineReducers","chatID","userInitialState","rootReducer","createStore","applyMiddleware","thunk","userMiddleware","Input","placeholder","onChange","label","required","helperText","FormGroup","Label","for","className","e","persist","target","FormText","color","defaultProps","connect","userExists","useState","setEmail","ModalHeader","toggle","ModalBody","Form","onSubmit","preventDefault","Button","dispatchLogin","password","setPassword","signup","orignalEmail","setFirstName","setLastName","resendVerifyEmail","onClick","reducer","Modals","AuthEmail","AuthPassword","AuthSignup","Modal","useReducer","initSate","useEffect","Content","isOpen","require","IconButton","size","detail","icon","testID","text","classNames","data-testid","CancelButton","faTimes","CreateButton","faPlus","EditButton","faPen","HeartButton","faHeart","SaveButton","faSave","MoreOptions","faEllipsisH","Dropdown","header","options","UncontrolledPopover","trigger","placement","PopoverHeader","Navigation","dropdownOpen","setDropdownOpen","Navbar","light","sticky","NavbarBrand","href","valid","prevState","DropdownToggle","caret","displayName","DropdownMenu","to","replace","dismiss","visible","setVisible","Alert","moment","format","content","source","bordered","converter","Showdown","tables","simplifiedAutoLink","strikethrough","tasklists","EditContent","selectedTab","setSelectedTab","onTabChange","generateMarkdownPreview","markdown","resolve","makeHtml","FollowUpUserInfo","faUser","TestIDs","FollowUpButtons","editOnPress","saveOnPress","editMode","FollowUpCard","updateFollowUp","canEdit","toggleEditMode","updateContent","fllwUp","createFollowUp","addFollowUpMode","toggleAddFollowUpMode","followUpContent","updateFollowUpContent","createOnPress","scrollTo","scrollHeight","Card","followUpUser","popoverOpen","setPopoverOpen","onMouseEnter","onMouseLeave","Popover","PopoverBody","slice","ChatCard","CardTitle","tag","ConnectedChatList","withRouter","ownProps","pageStart","loadMore","hasMore","loader","threshold","ChatsPage","component","path","exact","query","match","params","followUpsList","loadChatDetail","loadFollowUps","me","possesive","verify","location","parsed","queryString","parse","search","dispatchBootstrap","dispatchLogout","Container","ChatDetailPage","VerifyPage","ProfilePage","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.37d08896.chunk.js","sourcesContent":["export type UserType = {\n  id?: number,\n  pk?: number,\n  firstName: string,\n  lastName: string,\n  url?: string | undefined\n  email?: string | undefined,\n}\n\nclass User {\n  id: number\n  firstName: string\n  lastName: string\n  url: string | undefined\n  email: string | undefined\n\n  constructor(data: UserType = { id: NaN, firstName :'', lastName: '', url: ''}) {\n    this.id = data.id || data.pk || NaN\n    this.firstName = data.firstName\n    this.lastName = data.lastName\n    this.email = data.email\n    this.url = data.url\n\n  }\n\n  get displayName (): string {\n    if (!this.firstName && !this.lastName) {\n      return 'Anonymous'\n    } else if (this.firstName && this.lastName) {\n      return `${this.firstName} ${this.lastName}`\n    }\n    return this.firstName\n  }\n\n  get valid() {\n    return !Number.isNaN(this.id)\n  }\n}\n\nexport default User\n","import{ RootState } from '../reducers'\nimport User from '../models/user'\n\nconst getUserStore = (store: RootState) => store.user\n\nconst getToken = (store: RootState) => getUserStore(store).token\n\nconst getAuthed = (store: RootState) => !!getUserStore(store).user\n\nconst getUser = (store: RootState): User => getUserStore(store).user || new User()\n\nexport {\n  getToken,\n  getAuthed,\n  getUser,\n}\n","import{ RootState } from '../reducers'\n\nconst getChats = (state: RootState) => state.entities.chats\n\nconst getFollowUps = (state: RootState) => state.entities.followUps\n\nconst getUsers = (state: RootState) => state.entities.users\n\nconst getUserByID = (state: RootState, id: string) => getUsers(state)[id]\n\nexport {\n  getChats,\n  getFollowUps,\n  getUsers,\n  getUserByID,\n}","export interface ChatType {\n  id: number,\n  title: string,\n  date: string,\n  description: string,\n  followups: string,\n  url: string,\n  participants: Array<Participant>,\n}\n\n\nclass Chat implements ChatType {\n  id: number\n  title: string\n  date: string\n  description: string\n  followups: string\n  url: string\n  participants: Array<Participant>\n  constructor(data: ChatType = { id: NaN, title: '', date: '', description: '', followups: '', url: '', participants: []}) {\n    this.id = data.id\n    this.title = data.title\n    this.date = data.date\n    this.description = data.description\n    this.followups = data.followups\n    this.url = data.url\n    this.participants = data.participants\n  }\n\n  getUserRole(id: number): 'Organizer' | 'Participant' | '' {\n    const { role } = this.participants.find((p: Participant) => p.user.toString() === id.toString()) || { role: ''}\n    return role \n  }\n\n  isOrganizer(id: number): boolean {\n    return this.getUserRole(id) === 'Organizer'\n  }\n\n  get valid() {\n    return !Number.isNaN(this.id)\n  }\n}\n\nexport default Chat","import{ RootState } from '../reducers'\nimport * as selectEntities from './entities'\nimport Chat from '../models/chat'\n\nconst getChatByID = (state: RootState, id: number) => {\n  const chats = selectEntities.getChats(state)\n  const chat = chats[id]\n  if (chat) {\n    // Make sure Participants are always sorted with Organizer first\n    chat.participants.sort((a: Participant, b: Participant) => {\n      if (a.role === 'Organizer') return -1\n      if (b.role === 'Participant') return 1\n      return 0\n    })\n  }\n  return chat || new Chat()\n}\n\nconst getFollowupsForChatID = (state: RootState, id: number) => {\n  const followUps = selectEntities.getFollowUps(state)\n  const followUpsPagination = state.pagination.followUpsByChat[id] || { ids: [] }\n  // @ts-ignore\n  const followUpsList = followUpsPagination.ids.map((id: number) => {\n    const followUp = followUps[id]\n    return followUp\n  })\n  return followUpsList \n}\n\nexport {\n  getChatByID,\n  getFollowupsForChatID,\n}","import { RootState } from '../reducers'\n\nconst getPaginationStore = (state: RootState) => state.pagination\n\n// @ts-ignore\nconst isFetchingChats = (state: RootState, key: string): boolean => {\n  const pager = getPaginationStore(state).chatsByFilter[key]\n  if (pager){\n    // @ts-ignore\n    return pager?.isFetching\n  }\n  return  false\n}\n\n\nconst getChatsPagination = (state: RootState, filter: string): { ids: Array<string>, next: string | null } => {\n  const chatsPagination = getPaginationStore(state).chatsByFilter[filter]\n  // @ts-ignore\n  return { ids: chatsPagination?.ids || [], next: chatsPagination?.next }\n}\n\n\nexport {\n  isFetchingChats,\n  getChatsPagination\n}","import { MiddlewareAPI, Dispatch, Middleware, AnyAction } from \"redux\"\nimport { camelizeKeys, decamelizeKeys } from 'humps'\nimport * as selectors from '../selectors'\nimport ApiRoutes from '../constants'\nconst API_ROOT = process.env.REACT_APP_API_ROOT || 'http://localhost:8000/api/'\n\n\nexport type APIPayload<P> = {\n  types: [string, string, string],\n  endpoint: valueof<typeof ApiRoutes>,\n  method: 'POST' | 'PUT' | 'GET' | 'DELETE',\n  payload: P,\n}\n\n// Makes an API call, and properly formats the response.\nconst callApi = (endpoint: string, method: 'POST' | 'PUT' | 'GET' | 'DELETE', payload: any, token?: string | null) => {\n  const url = (endpoint.indexOf(API_ROOT) === -1) ? API_ROOT + endpoint : endpoint\n\n  const jsonPayload = JSON.stringify(decamelizeKeys(payload))\n  const headers: { [header: string]: string } = { 'Content-Type': 'application/json' }\n  if (token) {\n    headers.Authorization = `Token ${token}`\n  }\n  switch (method) {\n    case 'POST':\n    case 'PUT':\n    case 'DELETE':\n      return fetch(url, { method, body: jsonPayload, headers })\n        .then(async (response: Response) => {\n          if (!response.ok) {\n            return Promise.reject(response)\n          }\n          let camelJson = {}\n          if (response.status !== 204) {\n            await response.json().then((json) => {\n              camelJson = camelizeKeys(json)\n            }).catch()\n          }\n          return camelJson\n        })\n    default:\n      return fetch(url, { headers })\n        .then((response: Response) => response.json().then((json) => {\n          if (!response.ok) {\n            return Promise.reject(response)\n          }\n\n          const camelJson = camelizeKeys(json)\n          return camelJson\n        }))\n  }\n}\n\nexport const CALL_API = 'CALL_API'\n\n// A Redux middleware that interprets actions with CALL_API info specified.\n// Performs the call and promises when such actions are dispatched.\nconst api: Middleware<Dispatch> = (store: MiddlewareAPI) => (next: (action: AnyAction) => void) => (action: AnyAction) => {\n  if (action.type === CALL_API) {\n    let { endpoint } = action.payload\n    const {\n      schema: responseSchema, types, method, payload, meta,\n    } = action.payload\n    if (typeof endpoint === 'function') {\n      endpoint = endpoint(store.getState())\n    }\n\n    if (typeof endpoint !== 'string') {\n      throw new Error('Specify a string endpoint URL.')\n    }\n    // We will always pass a request, success, and failure action type\n    if (!Array.isArray(types) || types.length !== 3) {\n      throw new Error('Expected an array of three action types.')\n    }\n    if (!types.every((type) => typeof type === 'string')) {\n      throw new Error('Expected action types to be strings.')\n    }\n\n    const [requestType, successType, failureType] = types\n    next({ type: requestType, payload: { meta } })\n    const token = selectors.user.getToken(store.getState())\n    return callApi(endpoint, method, payload, token).then(\n      (response: any) => {\n        const metaWithPagination = response.results ? { ...meta, count: response.count, next: response.next, previous: response.previous } : meta\n        return next({\n        payload: { result: response.results || response, responseSchema, meta: metaWithPagination },\n        type: successType,\n      })},\n      (error: { message: string, status: number }) => next({\n        type: failureType,\n        payload: { message: error.message || 'An error occurred.', status: error.status, meta },\n      }),\n    )\n  }\n  return next(action)\n}\n\nexport default api\n","import { schema } from 'normalizr'\nimport Chat, { ChatType } from './chat'\nimport User, { UserType } from './user'\n\nconst userSchema = new schema.Entity('users', {}, {\n  idAttribute: (user: User) => user.id.toString(),\n  processStrategy: (value: UserType) => new User(value),\n  mergeStrategy: (a: User) => a,\n})\n\nconst chatSchema = new schema.Entity('chats', {\n  participants: [{\n    user: userSchema,\n  }],\n}, {\n  idAttribute: (chat: ChatType) => chat.id.toString(),\n  processStrategy: (value: ChatType) => new Chat(value),\n})\n\nconst followUpSchema = new schema.Entity('followUps', {\n  pennyChat: chatSchema,\n  user: userSchema,\n}, {\n  idAttribute: (followUp: FollowUp) => followUp.id.toString(),\n})\n\n// Schemas for the responses from the API\nexport const Schemas = {\n  CHAT: chatSchema,\n  CHAT_ARRAY: [chatSchema],\n  USER: userSchema,\n  USER_ARRAY: [userSchema],\n  FOLLOW_UP: followUpSchema,\n  FOLLOW_UP_ARRAY: [followUpSchema],\n}","\nconst ApiRoutes = {\n  user: 'auth/user/',\n  userProfile: 'users/profile/',\n  login: 'auth/login/',\n  register: 'auth/register/',\n  logout: 'auth/logout/',\n  exists: 'auth/exists/',\n  chats:  'chats/',\n  chatDetail: (id: number) => `chats/${id}/`,\n  userChats: (userID: string) => `chats/?participants__user_id=${userID}`,\n  resendEmail: 'auth/verification-email/',\n  verifyEmail: 'auth/verify/', \n}\n\nexport const Routes = {\n  Profile: '/profile/:id',\n  Chats: '/chats',\n  ChatDetail: '/chats/:id',\n  Home: '/',\n  VerifyEmail: '/verify',\n}\n\nexport default ApiRoutes\n","import { CALL_API } from '../middleware/api'\nimport { Schemas } from '../models/schemas'\nimport ApiRoutes from '../constants'\n\nexport const Actions = {\n  CHATS_LIST_REQUEST: 'CHATS_LIST_REQUEST',\n  CHATS_LIST_SUCCESS: 'CHATS_LIST_SUCCESS',\n  CHATS_LIST_FAILURE: 'CHATS_LIST_FAILURE',\n  CHAT_DETAIL_REQUEST: 'CHAT_DETAIL_REQUEST',\n  CHAT_DETAIL_SUCCESS: 'CHAT_DETAIL_SUCCESS',\n  CHAT_DETAIL_FAILURE: 'CHAT_DETAIL_FAILURE',\n  FOLLOW_UPS_REQUEST: 'FOLLOW_UPS_REQUEST',\n  FOLLOW_UPS_SUCCESS: 'FOLLOW_UPS_SUCCESS',\n  FOLLOW_UPS_FAILURE: 'FOLLOW_UPS_FAILURE',\n  CREATE_FOLLOW_UP_REQUEST: 'CREATE_FOLLOW_UP_REQUEST',\n  CREATE_FOLLOW_UP_SUCCESS: 'CREATE_FOLLOW_UP_SUCCESS',\n  CREATE_FOLLOW_UP_FAILURE: 'CREATE_FOLLOW_UP_FAILURE',\n  UPDATE_FOLLOW_UP_REQUEST: 'UPDATE_FOLLOW_UP_REQUEST',\n  UPDATE_FOLLOW_UP_SUCCESS: 'UPDATE_FOLLOW_UP_SUCCESS',\n  UPDATE_FOLLOW_UP_FAILURE: 'UPDATE_FOLLOW_UP_FAILURE',\n  CLEAR_ERROR_MESSAGE: 'CLEAR_ERROR_MESSAGE',\n}\n\n// Creates an action that will fetch the chats list\nexport const loadChatsList = (nextPageUrl: string, userID?: string) => ({\n  type: CALL_API,\n  payload: {\n    types: [Actions.CHATS_LIST_REQUEST, Actions.CHATS_LIST_SUCCESS, Actions.CHATS_LIST_FAILURE],\n    endpoint: nextPageUrl,\n    schema: Schemas.CHAT_ARRAY,\n    meta: { userID },\n  },\n})\n\n// Creates an action that will fetch a chat\nexport const loadChatDetail = (chatID: number) => ({\n  type: CALL_API,\n  payload: {\n    types: [Actions.CHAT_DETAIL_REQUEST, Actions.CHAT_DETAIL_SUCCESS, Actions.CHAT_DETAIL_FAILURE],\n    endpoint: ApiRoutes.chatDetail(chatID),\n    schema: Schemas.CHAT,\n  },\n})\n\n// Creates an action that will fetch the follow ups associated with a chat\nexport const loadFollowUps = (chatID: number, nextPageUrl: string | undefined) => ({\n  type: CALL_API,\n  payload: {\n    meta: { chatID },\n    types: [Actions.FOLLOW_UPS_REQUEST, Actions.FOLLOW_UPS_SUCCESS, Actions.FOLLOW_UPS_FAILURE],\n    endpoint: nextPageUrl || `chats/${chatID}/follow-ups/`,\n    schema: Schemas.FOLLOW_UP_ARRAY,\n  },\n})\n\nexport const updateFollowUp = (followUp: FollowUp) => ({\n  type: CALL_API,\n  payload: {\n    types: [Actions.UPDATE_FOLLOW_UP_REQUEST, Actions.UPDATE_FOLLOW_UP_SUCCESS, Actions.UPDATE_FOLLOW_UP_FAILURE],\n    endpoint: `follow-ups/${followUp.id}/`,\n    schema: Schemas.FOLLOW_UP,\n    method: 'PUT',\n    payload: followUp,\n  },\n})\n\nexport const createFollowUp = (chatID: number, followUp: { content: string }) => ({\n  type: CALL_API,\n  payload: {\n    types: [Actions.CREATE_FOLLOW_UP_REQUEST, Actions.CREATE_FOLLOW_UP_SUCCESS, Actions.CREATE_FOLLOW_UP_FAILURE],\n    endpoint: `chats/${chatID}/follow-ups/`,\n    schema: Schemas.FOLLOW_UP,\n    method: 'POST',\n    payload: followUp,\n    meta: { chatID },\n  },\n})\n","import { CALL_API, APIPayload } from '../middleware/api'\nimport { AnyAction } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport ApiRoutes from '../constants'\n\nexport const Actions = {\n  HYDRATE_USER: 'HYDRATE_USER',\n  LOGOUT_USER: 'LOGOUT_USER',\n  BOOTSTRAP: 'BOOTSTRAP',\n  SET_TOKEN: 'SET_TOKEN',\n  FETCH_USER_REQUEST: 'FETCH_USER_REQUEST',\n  FETCH_USER_SUCCESS: 'FETCH_USER_SUCCESS',\n  FETCH_USER_FAILURE: 'FETCH_USER_FAILURE',\n  LOGIN_REQUEST: 'LOGIN_REQUEST',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  SIGNUP_REQUEST: 'SIGNUP_REQUEST',\n  SIGNUP_SUCCESS: 'SIGNUP_SUCCESS',\n  SIGNUP_FAILURE: 'SIGNUP_FAILURE',\n  LOGOUT_REQUEST: 'LOGOUT_REQUEST',\n  LOGOUT_SUCCESS: 'LOGOUT_SUCCESS',\n  LOGOUT_FAILURE: 'LOGOUT_FAILURE',\n  USER_EXISTS_REQUEST: 'USER_EXISTS_REQUEST',\n  USER_EXISTS_SUCCESS: 'USER_EXISTS_SUCCESS',\n  USER_EXISTS_FAILURE: 'USER_EXISTS_FAILURE',\n  RESEND_VERIFY_EMAIL_REQUEST: 'RESEND_VERIFY_EMAIL_REQUEST',\n  RESEND_VERIFY_EMAIL_SUCCESS: 'RESEND_VERIFY_EMAIL_SUCCESS',\n  RESEND_VERIFY_EMAIL_FAILURE: 'RESEND_VERIFY_EMAIL_FAILURE',\n  VERIFY_EMAIL_REQUEST: 'VERIFY_EMAIL_REQUEST',\n  VERIFY_EMAIL_SUCCESS: 'VERIFY_EMAIL_SUCCESS',\n  VERIFY_EMAIL_FAILURE: 'VERIFY_EMAIL_FAILURE',\n}\n\n\nexport const setToken = (token: string) => ({\n  type: Actions.SET_TOKEN,\n  payload: token,\n})\n\nexport const bootstrap = () => ({\n  type: Actions.BOOTSTRAP,\n})\n\nexport const fetchUser = () => ({\n  type: CALL_API,\n  payload: {\n    types: [Actions.FETCH_USER_REQUEST, Actions.FETCH_USER_SUCCESS, Actions.FETCH_USER_FAILURE],\n    endpoint: ApiRoutes.user,\n    method: 'GET',\n  },\n})\n\nconst login = (payload: { email: string, password: string }): AnyAction => ({\n  type: CALL_API,\n  payload: {\n    types: [Actions.LOGIN_REQUEST, Actions.LOGIN_SUCCESS, Actions.LOGIN_FAILURE],\n    endpoint: ApiRoutes.login,\n    method: 'POST',\n    payload,\n  },\n})\n\nexport const signup = (payload: { email: string, password: string }): AnyAction => ({\n  type: CALL_API,\n  payload: {\n    types: [Actions.SIGNUP_REQUEST, Actions.SIGNUP_SUCCESS, Actions.SIGNUP_FAILURE],\n    endpoint: ApiRoutes.register,\n    method: 'POST',\n    payload,\n    meta: { email: payload.email },\n  },\n})\n\n\nexport const userExists = (email: string) => ({\n  type: CALL_API,\n  payload: {\n    types: [Actions.USER_EXISTS_REQUEST, Actions.USER_EXISTS_SUCCESS, Actions.USER_EXISTS_FAILURE],\n    endpoint: ApiRoutes.exists,\n    method: 'POST',\n    payload: { email },\n    meta: { email },\n  },\n})\n\nexport const logout = () => ({\n  type: Actions.LOGOUT_USER,\n})\n\nexport const logoutRequest = () => ({\n  type: CALL_API,\n  payload: {\n    types: [Actions.LOGOUT_REQUEST, Actions.LOGOUT_SUCCESS, Actions.LOGOUT_FAILURE],\n    endpoint: ApiRoutes.logout,\n    method: 'POST',\n  },\n})\n\nexport const resendVerifyEmail = (email: string) => ({\n  type: CALL_API,\n  payload: {\n    types: [Actions.RESEND_VERIFY_EMAIL_REQUEST, Actions.RESEND_VERIFY_EMAIL_SUCCESS, Actions.RESEND_VERIFY_EMAIL_FAILURE],\n    endpoint: ApiRoutes.resendEmail,\n    payload: { email },\n    method: 'POST',\n  },\n})\n\nexport const verifyEmail = (payload: {token: string, email: string }) => ({\n  type: CALL_API,\n  payload: {\n    types: [Actions.VERIFY_EMAIL_REQUEST, Actions.VERIFY_EMAIL_SUCCESS, Actions.VERIFY_EMAIL_FAILURE],\n    endpoint: ApiRoutes.verifyEmail,\n    payload,\n    method: 'POST',\n  },\n})\n\n\n\nexport const dispatchLogin = (payload: { email: string, password: string }) => async (dispatch: ThunkDispatch<{}, {}, StandardAction<APIPayload<any>>>) => dispatch(login(payload))\n\nexport const dispatchLogout = () => async (dispatch: ThunkDispatch<{}, {}, StandardAction<APIPayload<any>>>) => dispatch(logout())\n","import { normalize, Schema } from 'normalizr'\nimport { AnyAction } from 'redux'\nimport * as ActionTypes from '../actions'\n\nexport const paginationInitialState = {\n  chatsByFilter: {\n    all: {\n      isFetching: false,\n      next: '',\n      previous: '',\n      count: 0,\n      ids: [],\n    }\n  },\n  followUpsByChat: {},\n}\n\n// Takes two arrays and returns the union between them as a new array\nconst union = (a: Iterable<any>, b: Iterable<any>) => (\n  [...new Set([...a, ...b])]\n)\n\n// Reducer for handling actions that require pagination.\n// Requires three types (request, success, and failure),\n// and a function to map the pagination to a key, e.g. (action) => action.filterName.\nconst paginate = ({ types, mapActionToKey }: { types: [Array<string>, Array<string>, Array<string>], mapActionToKey: (action: AnyAction) => string | undefined }) => {\n  if (!Array.isArray(types) || types.length !== 3) {\n    throw new Error('Expected types to be an array of three elements.')\n  }\n  if (!types.every((t) => Array.isArray(t))) {\n    throw new Error('Expected types to be strings.')\n  }\n  if (typeof mapActionToKey !== 'function') {\n    throw new Error('Expected mapActionToKey to be a function.')\n  }\n\n  const [requestTypes, successTypes, failureTypes] = types\n\n  const updatePagination = (state = {\n    isFetching: false,\n    next: undefined,\n    previous: undefined,\n    count: 0,\n    ids: Array(),\n  }, action: AnyAction) => {\n    const { result, responseSchema } = action.payload || {}\n      if(requestTypes.includes(action.type)){\n        return {\n          ...state,\n          isFetching: true,\n        }\n       } else if (successTypes.includes(action.type)){\n        if (responseSchema) {\n          let { result: resultIds } = normalize(result, responseSchema)\n          if (typeof resultIds === 'string') {\n            resultIds = [resultIds]\n          }\n          return {\n            ...state,\n            isFetching: false,\n            ids: union(state.ids, resultIds),\n            next: action.payload?.meta.next,\n            previous: action.payload?.meta.previous,\n            count: action.payload?.meta.count,\n            \n          }\n        }\n      } else if (failureTypes.includes(action.type)){\n        return {\n          ...state,\n          isFetching: false,\n        }\n      }\n      return state\n    }\n\n  return (state = paginationInitialState, action: AnyAction): PaginationState  => {\n    // Update pagination by key\n    const key = mapActionToKey(action)\n        if (key) {\n          return {\n            ...state,\n            // @ts-ignore\n            [key]: updatePagination(state[key], action),\n          }\n        }\n        return state\n  }\n}\n\nexport default paginate","import { AnyAction } from 'redux'\nimport { Actions } from '../actions/user'\nimport { User } from '../models'\n\nexport const initialState: UserState = {\n  token: null,\n  user: null,\n}\n\nconst user = (state = initialState, action: AnyAction): UserState => {\n  const newState = { ...state }\n  const { payload, type } = action\n  switch (type) {\n    case Actions.SET_TOKEN:\n      newState.token = payload\n      break\n    case Actions.FETCH_USER_SUCCESS:\n      newState.user = new User(action.payload.result)\n      break\n    case Actions.LOGOUT_SUCCESS:\n      newState.token = null\n      newState.user = null\n      break\n    default:\n  }\n  return newState\n}\n\nexport default user\n","\nimport { MiddlewareAPI, Dispatch, Middleware, AnyAction } from \"redux\"\n\nconst logging: Middleware<Dispatch> = (store: MiddlewareAPI) => (next: (action: AnyAction) => void) => (action: AnyAction) => {\n  const before = store.getState()\n  const result = next(action)\n  if (process.env.NODE_ENV !== 'production') {\n    // Group these console logs into one closed group\n    /* eslint-disable no-console */\n    const after = store.getState()\n    console.groupCollapsed(`dispatching action => ${action.type}`)\n    console.log('BEFORE', before)\n    console.log('ACTION', action.type, action)\n    console.log('AFTER', after)\n    console.groupEnd()\n    /* eslint-enable no-console */\n  }\n\n  return result\n}\n\nexport default logging\n","// @flow\nconst Cookies = {\n  token: 'token',\n  user: 'user',\n}\n\nconst AUTH_EXPIRATION = 60 * 24 * 7 * 4 // 4 weeks\n\nconst CookieHelper = () => {\n  const getCookie = (name: string) => {\n    const nameEQ = `${name}=`\n    const ca = document.cookie.split(';')\n    for (let i = 0; i < ca.length; i++) { // eslint-disable-line no-plusplus\n      let c = ca[i]\n      while (c.charAt(0) === ' ') c = c.substring(1, c.length)\n      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length)\n    }\n    return null\n  }\n\n  const setCookie = (name: string, data: string, expiration: number) => {\n    let expires = ''\n    if (expiration) {\n      const date = new Date()\n      date.setTime(date.getTime() + expiration * 60 * 1000)\n      expires = `; expires=${date.toUTCString()}`\n    }\n    document.cookie = `${name}=${data || ''}${expires}; path=/`\n  }\n\n  const deleteCookie = (name: string) => {\n    document.cookie = `${name}=; Max-Age=-99999999; path=/`\n  }\n\n  const setToken = (data: string) => setCookie(Cookies.token, data, AUTH_EXPIRATION)\n  const getToken = () => getCookie(Cookies.token)\n  const deleteToken = () => deleteCookie(Cookies.token)\n\n  const setUser = (data: string) => setCookie(Cookies.user, data, AUTH_EXPIRATION)\n  const getUser = () => getCookie(Cookies.user)\n  const deleteUser = () => deleteCookie(Cookies.user)\n\n  const clearCookies = () => {\n    deleteUser()\n    deleteToken()\n  }\n\n  return {\n    setToken,\n    getToken,\n    deleteToken,\n    setUser,\n    getUser,\n    deleteUser,\n    clearCookies,\n  }\n}\nexport default CookieHelper()\n","const Actions = {\n  CLOSE_MODAL: 'CLOSE_MODAL',\n  OPEN_MODAL: 'OPEN_MODAL',\n}\n\nconst ModalNames = {\n  AUTH_EMAIL: 'AUTH_EMAIL',\n  AUTH_PASSWORD: 'AUTH_PASSWORD',\n  AUTH_SIGNUP: 'AUTH_SIGNUP',\n  VERIFY_EMAIL: 'VERIFY_EMAIL',\n}\n\nexport {\n  ModalNames,\n}\n\nexport default Actions\n","import { Dispatch } from 'react'\nimport { Action } from '.'\nimport Actions, { ModalNames } from './constants'\n\nconst modalDispatch = () => {\n  let _dispatch: Dispatch<Action> | null = null // eslint-disable-line no-underscore-dangle\n  const mount = (dispatch: Dispatch<Action>) => {\n    _dispatch = dispatch\n  }\n\n  const unmount = () => {\n    _dispatch = null\n  }\n\n  const call = (func: Function) => (...args: any) => {\n    if (_dispatch) {\n      _dispatch(func(...args))\n    }\n  }\n\n  const open = (payload: Object) => ({\n    type: Actions.OPEN_MODAL,\n    payload,\n  })\n\n  const close = () => ({\n    type: Actions.CLOSE_MODAL,\n    payload: null,\n  })\n\n  const authUsername = () => open({\n    name: ModalNames.AUTH_EMAIL,\n  })\n\n  const authPassword = (email: string) => open({\n    name: ModalNames.AUTH_PASSWORD,\n    props: { email },\n  })\n\n  const authSignup = (email: string) => open({\n    name: ModalNames.AUTH_SIGNUP,\n    props: { email },\n  })\n\n  const verifyEmail = (email: string) => open({\n    name: ModalNames.VERIFY_EMAIL,\n    props: { email },\n  })\n\n  return {\n    mount,\n    unmount,\n    auth: call(authUsername),\n    authSignup: call(authSignup),\n    authPassword: call(authPassword),\n    verifyEmail: call(verifyEmail),\n    close: call(close),\n  }\n}\n\nexport default modalDispatch()\n","import { MiddlewareAPI, Dispatch, Middleware, AnyAction } from \"redux\"\nimport { ThunkDispatch } from 'redux-thunk'\nimport {\n  setToken, fetchUser, Actions, logoutRequest } from '../actions/user'\nimport { loadChatsList } from '../actions/chat'\nimport CookieHelper from '../helpers/cookie'\nimport modalDispatch from '../components/modal/dispatch'\nimport ApiRoutes from \"../constants\"\n\nconst logout = (dispatch: ThunkDispatch<{}, {}, AnyAction>) => {\n  CookieHelper.clearCookies()\n  dispatch(logoutRequest())\n}\n\nconst checkAuth = (dispatch: ThunkDispatch<{}, {}, AnyAction>) => {\n  const token = CookieHelper.getToken()\n  if (token) {\n    dispatch(setToken(token))\n    dispatch(fetchUser())\n  }\n}\n\nconst user : Middleware<Dispatch> = (store: MiddlewareAPI) => (next: (action: AnyAction) => void) => (action: AnyAction) => {\n  switch (action.type) {\n    case Actions.LOGOUT_USER:\n      logout(store.dispatch)\n      break\n    case Actions.BOOTSTRAP:\n      checkAuth(store.dispatch)\n      store.dispatch(loadChatsList(ApiRoutes.chats))\n      break\n    case Actions.SIGNUP_SUCCESS:\n        modalDispatch.verifyEmail(action.payload.meta.email)\n      break    \n    case Actions.LOGIN_SUCCESS:\n      CookieHelper.setToken(action.payload.result.key)\n      store.dispatch(setToken(action.payload.result.key))\n      store.dispatch(fetchUser())\n      modalDispatch.close()\n      break\n    case Actions.FETCH_USER_SUCCESS:\n      // Load data\n      const user = action.payload.result\n      const pk = user.pk.toString()\n      store.dispatch(loadChatsList(ApiRoutes.userChats(pk), pk))\n      break\n    case Actions.USER_EXISTS_SUCCESS:\n      modalDispatch.authPassword(action.payload.meta.email)\n      break\n      case Actions.USER_EXISTS_FAILURE:\n        const { status } = action.payload\n        if (status === 403) {\n          modalDispatch.verifyEmail(action.payload.meta.email)\n        }\n        modalDispatch.authSignup(action.payload.meta.email)\n      break\n      case Actions.VERIFY_EMAIL_SUCCESS:\n        modalDispatch.auth()\n      break\n    default:\n  }\n  return next(action)\n}\nexport default user\n","import { combineReducers, applyMiddleware, createStore, compose } from 'redux'\nimport { AnyAction } from 'redux'\nimport { normalize } from 'normalizr'\nimport { ChatActions, UserActions } from '../actions'\nimport paginate, { paginationInitialState } from './paginate'\nimport user, { initialState as userInitialState } from './user'\nimport thunk from 'redux-thunk'\nimport api from '../middleware/api'\nimport logging from '../middleware/logging'\nimport userMiddleware from '../middleware/user'\nimport { Schemas } from '../models/schemas'\n\n// Eventually we will want to move this into a DEV configuration\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// Updates an entity cache in response to any action\n// with response.entities, such as a CHATS_LIST_SUCCESS\n\nconst failureTypes = [\n  ChatActions.CHATS_LIST_FAILURE,\n  ChatActions.CHAT_DETAIL_FAILURE,\n  ChatActions.FOLLOW_UPS_FAILURE,\n  ChatActions.CREATE_FOLLOW_UP_FAILURE,\n  ChatActions.UPDATE_FOLLOW_UP_FAILURE,\n  UserActions.FETCH_USER_FAILURE,\n  UserActions.LOGIN_FAILURE,\n  UserActions.SIGNUP_FAILURE,\n  UserActions.LOGOUT_FAILURE,\n  UserActions.USER_EXISTS_FAILURE,\n  UserActions.RESEND_VERIFY_EMAIL_FAILURE,\n  UserActions.VERIFY_EMAIL_FAILURE,\n]\n\nconst entities = (state: EntityState = { chats: {}, followUps: {}, users: {}, }, action: AnyAction): EntityState => {\n  const { result, responseSchema } = action.payload || {}\n  if (result && responseSchema) {\n    const { entities: { chats = {}, users = {}, followUps = {} } = {} } = normalize(result, responseSchema)\n    return {\n      chats: {\n        ...state.chats,\n        ...chats,\n      },\n      users: {\n        ...state.users,\n        ...users,\n      },\n      followUps: {\n        ...state.followUps,\n        ...followUps,\n      }\n    }\n  }\n  return state\n}\n\nconst errorReducer = (state = { status: NaN, message: '' }, action: AnyAction): ErrorState => {\n  const { type, payload } = action\n  if (type === ChatActions.CLEAR_ERROR_MESSAGE) {\n    return { status: NaN, message: '' }\n  } else if (failureTypes.includes(action.type)) {\n    return payload\n  }\n  return state\n}\n\nconst pagination = combineReducers({\n  chatsByFilter: paginate({\n    mapActionToKey: (action?: AnyAction) => {\n      return action?.payload?.meta?.userID || 'all'\n    },\n    types: [\n      [ChatActions.CHATS_LIST_REQUEST],\n      [ChatActions.CHATS_LIST_SUCCESS],\n      [ChatActions.CHATS_LIST_FAILURE],\n    ],\n  }),\n  followUpsByChat: paginate({\n    mapActionToKey: (action?: AnyAction) => action?.payload?.meta?.chatID,\n    types: [\n      [ChatActions.FOLLOW_UPS_REQUEST],\n      [ChatActions.FOLLOW_UPS_SUCCESS, ChatActions.CREATE_FOLLOW_UP_SUCCESS],\n      [ChatActions.FOLLOW_UPS_FAILURE],\n    ],\n  }),\n})\n\nexport const initialState = {\n  user: userInitialState,\n  entities: {\n    chats: {},\n    followUps: {},\n    users: {},\n  },\n  pagination: paginationInitialState,\n  error: { status: NaN, message: '' },\n}\n\nexport const rootReducer = combineReducers({\n  entities,\n  error: errorReducer,\n  pagination,\n  user,\n})\n\n// @ts-ignore\nconst store = createStore(rootReducer, initialState, composeEnhancers(\n  applyMiddleware(thunk, api, userMiddleware, logging),\n))\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport {\n  Schemas\n}\n\nexport default store","import React from 'react'\nimport { Input as InputStrap, Label, FormGroup, FormText } from 'reactstrap'\nimport { InputType } from 'reactstrap/lib/Input'\n\ntype InputProps = {\n  type: InputType,\n  name: string,\n  id: string,\n  placeholder?: string,\n  onChange: (text: string) => void,\n  label: string,\n  value: string,\n  required: boolean,\n  helperText?: string,\n}\n\n\nconst Input = ({\n  type, name, id, placeholder, onChange, label, value, required, helperText\n}: InputProps) => (\n    <FormGroup>\n      <Label for={id}>{label}</Label>\n      <InputStrap\n        type={type}\n        name={name}\n        id={id}\n        placeholder={placeholder}\n        className=\"form-control\"\n        onChange={(e) => {\n          e.persist()\n          onChange(e.target.value)\n        }}\n        value={value}\n        required={required}\n      />\n      {helperText ? <FormText color=\"muted\">{helperText}</FormText> : null}\n    </FormGroup>\n  )\n\nInput.defaultProps = {\n  placeholder: '',\n  required: false,\n  helperText: '',\n}\n\nexport default Input\n","// @flow\n\nimport React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux'\nimport {\n  Form, ModalHeader, ModalBody, Button,\n} from 'reactstrap'\nimport { Input } from '../../fields'\nimport modalDispatch from '../dispatch'\nimport { userExists } from '../../../actions/user'\n\ntype AuthEmailModalProps = {\n  userExists: (email: string) => AnyAction\n}\n\nconst AuthEmailModal = ({ userExists }: AuthEmailModalProps) => {\n  const [email, setEmail] = useState('')\n  return (\n    <>\n      <ModalHeader toggle={modalDispatch.close}>Sign up or log in</ModalHeader>\n      <ModalBody>\n        <Form onSubmit={(e) => {\n          e.preventDefault()\n          userExists(email)\n          return false\n        }}\n        >\n          <Input label=\"Email\" type=\"email\" name=\"email\" id=\"email\" placeholder=\"\" required onChange={setEmail} value={email} />\n          <div className=\"text-center\">\n            <Button>\n              Let&rsquo;s Go\n            </Button>\n          </div>\n        </Form>\n      </ModalBody>\n    </>\n  )\n}\n\n\nconst mapStateToProps = () => ({\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<{}, {}, AnyAction>) => ({\n  userExists: (email: string) => dispatch(userExists(email)),\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthEmailModal)\n","// @flow\n\nimport React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux'\nimport {\n  Form, ModalHeader, ModalBody, Button,\n} from 'reactstrap'\nimport modalDispatch from '../dispatch'\nimport { dispatchLogin } from '../../../actions/user'\nimport { Input } from '../../fields'\n\ntype AuthPasswordModalProps = {\n  email: string,\n  login: (payload: {email: string, password: string}) => void,\n}\n\nconst AuthPasswordModal = ({ email, login }: AuthPasswordModalProps) => {\n  const [password, setPassword] = useState('')\n  return (\n    <>\n      <ModalHeader toggle={modalDispatch.close}>Welcome back!</ModalHeader>\n      <ModalBody>\n        <Form onSubmit={(e) => {\n          e.preventDefault()\n          login({ email, password })\n        }}\n        >\n          <Input label=\"Password\" type=\"password\" name=\"password\" id=\"password\" placeholder=\"\" onChange={setPassword} value={password} required />\n          <div className=\"text-center\">\n            <Button>Let&rsquo;s Go</Button>\n          </div>\n        </Form>\n      </ModalBody>\n    </>\n  )\n}\n\n\nconst mapStateToProps = () => ({\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<{}, {}, AnyAction>) => ({\n  login: (payload: {email: string, password: string}) => dispatch(dispatchLogin(payload)),\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthPasswordModal)\n","// @flow\n\nimport React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux'\nimport {\n  Form, ModalHeader, ModalBody, Button,\n} from 'reactstrap'\nimport modalDispatch from '../dispatch'\nimport { signup } from '../../../actions/user'\nimport { Input } from '../../fields'\n\ntype AuthSignupModalProps = {\n  signup: (payload: {\n    firstName: string,\n    lastName: string,\n    email: string,\n    password: string,\n  }) => void,\n  email: string,\n}\n\nconst AuthSignupModal = ({ signup, email: orignalEmail }: AuthSignupModalProps) => {\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [password, setPassword] = useState('')\n  const [email, setEmail] = useState(orignalEmail)\n  return (\n    <>\n      <ModalHeader toggle={modalDispatch.close}>Looks like you're new. Fill out this form to create an account.</ModalHeader>\n      <ModalBody>\n        <Form onSubmit={(e) => {\n          e.preventDefault()\n          signup({\n            password, firstName, lastName, email,\n          })\n        }}\n        >\n          <Input label=\"First Name\" type=\"text\" name=\"firstName\" id=\"firstName\" placeholder=\"\" onChange={setFirstName} value={firstName} required />\n          <Input label=\"Last Name\" type=\"text\" name=\"lastName\" id=\"lastName\" placeholder=\"\" onChange={setLastName} value={lastName} required />\n          <Input label=\"Email\" type=\"email\" name=\"email\" id=\"email\" placeholder=\"\" onChange={setEmail} value={email} helperText={\"If you are part of the Penny U Slack, use the same email as that slack account.\"} />\n          <Input label=\"Password\" type=\"password\" name=\"password\" id=\"password\" placeholder=\"\" onChange={setPassword} value={password} required />\n          <div className=\"text-center\">\n            <Button>\n              Let&rsquo;s Go\n            </Button>\n          </div>\n        </Form>\n      </ModalBody>\n    </>\n  )\n}\n\n\nconst mapStateToProps = () => ({\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<{}, {}, AnyAction>) => ({\n  signup: (payload: {\n    firstName: string,\n    lastName: string,\n    email: string,\n    password: string,\n  }) => dispatch(signup(payload)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthSignupModal)\n","// @flow\n\nimport React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux'\nimport {\n  ModalHeader, ModalBody, Button,\n} from 'reactstrap'\nimport modalDispatch from '../dispatch'\nimport { resendVerifyEmail } from '../../../actions/user'\n\ntype AuthEmailModalProps = {\n  email: string,\n  resendVerifyEmail: (email: string) => AnyAction\n}\n\nconst AuthEmailModal = ({ email, resendVerifyEmail }: AuthEmailModalProps) => {\n  return (\n    <>\n      <ModalHeader toggle={modalDispatch.close}>Sign up or log in</ModalHeader>\n      <ModalBody>\n          <div className=\"text-center\">\n            <p>{email} needs to be verified.</p>\n            <p>Check your email for a verification link.</p>\n            <Button onClick={() => resendVerifyEmail(email)}>\n              Resend Verification email\n            </Button>\n          </div>\n      </ModalBody>\n    </>\n  )\n}\n\n\nconst mapStateToProps = () => ({\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<{}, {}, AnyAction>) => ({\n  resendVerifyEmail: (email: string) => dispatch(resendVerifyEmail(email)),\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthEmailModal)\n","// @flow\n/* eslint-disable max-lines-per-function */\n\nimport React, { useReducer, useEffect } from 'react'\nimport { Modal as ModalStrap } from 'reactstrap'\nimport modalDispatch from './dispatch'\nimport Actions, { ModalNames } from './constants'\nimport { AuthEmail, AuthPassword, AuthSignup, VerifyEmail } from './auth'\n\n\ntype State = { name: string | null, open: boolean, props: { email?: string | undefined } }\n\nexport type Action = { type: string, payload: { open: boolean, name: string, props?: { email?: string } } }\n\nconst initialState = {\n  name: null,\n  open: false,\n};\n\nfunction reducer(state: State, action: Action): State {\n  const { type, payload } = action\n  switch (type) {\n    case Actions.CLOSE_MODAL:\n      return { open: false, name: null, props: {} }\n    case Actions.OPEN_MODAL:\n      return { open: true, name: payload.name, props: payload.props || {} }\n    default:\n      return state\n  }\n}\n\nconst Modals = {\n  [ModalNames.AUTH_EMAIL]: AuthEmail,\n  [ModalNames.AUTH_PASSWORD]: AuthPassword,\n  [ModalNames.AUTH_SIGNUP]: AuthSignup,\n  [ModalNames.VERIFY_EMAIL]: VerifyEmail,\n}\n\nexport const Modal = () => {\n  // @ts-ignore\n  const [state, dispatch] = useReducer<State, Action>(reducer, initialState, (initSate: State) => initSate);\n  useEffect(() => {\n    modalDispatch.mount(dispatch)\n    return modalDispatch.unmount\n  })\n  const { open, props, name } = state\n  const Content = name ? Modals[name] : null\n  return (\n    <ModalStrap isOpen={open} toggle={modalDispatch.close}>\n      {Content ? <Content {...props} /> : null}\n    </ModalStrap>\n  )\n}\n\nexport default Modal\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faPlus, faTimes, faPen, faSave, faHeart, IconDefinition, faBan, faEllipsisH,\n} from '@fortawesome/free-solid-svg-icons'\nimport classNames from 'classnames/dedupe'\nimport { Button } from 'reactstrap'\n\n\nrequire('./style.scss')\n\nconst IconButton = ({\n  className, size, onClick, title, detail, icon, color, id, testID,\n}: { className: string, size: 'md', onClick: () => void, title: string, detail: string, icon: IconDefinition, color: string, id: string, testID?: string | null, }) => {\n  const text = title && detail ? `${title} ${detail}` : title || detail\n  return (\n    <Button size={size} color={color} onClick={onClick} className={classNames(className, 'edit-button')} id={id} data-testid={testID}>\n      <FontAwesomeIcon icon={icon} />\n      {text}\n    </Button>\n  )\n}\n\nIconButton.defaultProps = {\n  size: 'md',\n  color: 'primary',\n  detail: '',\n  className: '',\n  title: '',\n  onClick: null,\n  id: '',\n  testID: null,\n}\n\nconst CancelButton = ({\n  className, onClick, type: detail,\n}: { className: string, type?: string, onClick: () => void }) => (\n    <IconButton color=\"secondary\" className={className} onClick={onClick} detail={detail} title=\"Cancel\" icon={faTimes} />\n  )\n\nCancelButton.defaultProps = {\n  className: '',\n}\n\nconst CreateButton = ({\n  className, type: detail, onClick,\n}: { className: string, type: string, onClick: () => void }) => (\n    <IconButton onClick={onClick} className={className} detail={detail} title=\"Add New\" icon={faPlus} />\n  )\n\n\nCreateButton.defaultProps = {\n  className: '',\n}\n\nconst EditButton = ({\n  className, onClick, type: detail, color\n}: { className: string, type: string, onClick: () => void, color?: string }) => (\n    <IconButton detail={detail} title=\"Edit\" className={className} onClick={onClick} icon={faPen} color={color} />\n  )\n\nEditButton.defaultProps = {\n  className: '',\n  color: 'primary',\n}\n\nconst HeartButton = ({ className, count: detail }: { className: string, count: number }) => (\n  <IconButton color=\"red\" className={className} detail={detail.toString()} icon={faHeart} />\n)\n\nHeartButton.defaultProps = {\n  className: '',\n}\n\nconst SaveButton = ({\n  className, type: detail, onClick,\n}: { className: string, type: string, onClick: () => void }) => (\n  <IconButton className={className} onClick={onClick} icon={faSave} title=\"Save\" detail={detail} />\n)\n\nSaveButton.defaultProps = {\n  className: '',\n}\n\nconst MoreOptions = ({\n  className, onClick, id, testID,\n}: { className: string, id: string, onClick: () => void, testID: string }) => (\n  <IconButton className={className} onClick={onClick} icon={faEllipsisH} id={id} color=\"link\" testID={testID} />\n)\n\nMoreOptions.defaultProps = {\n  className: '',\n  onClick: () => {  },\n}\n\nexport {\n  HeartButton, CreateButton, EditButton, SaveButton, CancelButton, MoreOptions,\n}\n\nexport default IconButton\n","import React from 'react'\nimport { UncontrolledPopover, PopoverHeader, PopoverBody } from 'reactstrap'\nimport { MoreOptions } from '../buttons'\n\ninterface DropdownProps {\n  header: string,\n  options: Array<React.ReactElement>,\n  id: string,\n  testID: string,\n}\n\nconst Dropdown = ({ header, options, id, testID }: DropdownProps) => {\n  return (\n    <>\n      <MoreOptions id={id} testID={testID} />\n      <UncontrolledPopover trigger=\"legacy\" placement=\"bottom\" target={id}>\n        <PopoverHeader>{header}</PopoverHeader>\n        {options}\n      </UncontrolledPopover>\n    </>\n  )\n}\n\nexport default Dropdown\n","import React, { useState } from 'react'\nimport {\n  Button, Navbar, NavbarBrand, Dropdown, DropdownToggle, DropdownMenu,\n} from 'reactstrap'\nimport { Link } from 'react-router-dom'\nimport modalDispatch from '../modal/dispatch'\nimport { User } from '../../models'\nimport { Routes } from '../../constants'\n\nconst Navigation = ({ user, logout }: { user: User, logout: () => void }) => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggle = () => setDropdownOpen((prevState: boolean) => !prevState)\n  return (\n    <Navbar className=\"h2 bg-white shadow-sm\" light sticky=\"top\">\n      <NavbarBrand href=\"/\">Penny University</NavbarBrand>\n      {user.valid ? (\n\n        <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n          <DropdownToggle caret>\n            {`Hi, ${user.displayName}!`}\n          </DropdownToggle>\n          <DropdownMenu>\n            <div>\n              <Link\n                to={Routes.Profile.replace(':id', user.id.toString())}\n                className=\"btn btn-link\"\n              >\n                Profile\n              </Link>\n            </div>\n            <div>\n              <Button\n                onClick={logout}\n\n                color={'link'}\n              >\n                Logout\n        </Button>\n            </div>\n          </DropdownMenu>\n        </Dropdown>\n      )\n        : (\n          <Button onClick={modalDispatch.auth}>Login</Button>\n        )}\n    </Navbar >\n  )\n}\n\nexport default Navigation\n","import React, { useState } from 'react'\nimport { Alert } from 'reactstrap'\nimport { AnyAction } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { connect } from 'react-redux'\nimport { ChatActions } from '../../actions'\nimport{ RootState } from '../../reducers'\n\n\n\ntype AlertProps = {\n  error: string, \n  dismiss: () => void,\n}\n\nexport const ErrorAlert = ({ error, dismiss }: AlertProps) => {\n  const [visible, setVisible] = useState(true)\n\n  const onDismiss = () => {\n    setVisible(false)\n    dismiss()\n  }\n\n  return error ? (\n    <div className=\"alert-container\">\n      <Alert color=\"danger\" isOpen={visible} toggle={onDismiss}>\n        {error}\n      </Alert>\n    </div>\n  ) : null\n}\n\n\nconst mapStateToProps = (state: RootState) => {\n  const { error } = state\n  return { error: error?.message }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<{}, {}, AnyAction>) => ({\n  dismiss: () => dispatch({ type: ChatActions.CLEAR_ERROR_MESSAGE }),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ErrorAlert)\n","import React from 'react'\nimport moment from 'moment'\n\ntype DateProps = {\n  date: string,\n  className: string,\n}\n\nconst Date = ({ date, className }: DateProps) => (\n  <p className={className}><strong>{moment(date).format('M/D/YYYY')}</strong></p>\n)\n\nexport default Date\n","import React from 'react'\nimport ReactMarkdown from 'react-markdown'\n\ntype ContentProps = {\n  content?: string,\n  className?: string,\n}\n\nconst Content = ({ content, className }: ContentProps) => (\n  <ReactMarkdown className={className} source={content} />\n)\n\nContent.defaultProps = {\n  bordered: false,\n}\n\nexport default Content\n","import React, { useState } from 'react'\nimport ReactMde from 'react-mde'\nimport * as Showdown from 'showdown'\nimport 'react-mde/lib/styles/css/react-mde-all.css'\n\n\ntype EditorTabs = 'write' | 'preview'\n\ntype EditContentType = {\n  content: string,\n  onChange: (content: string) => void,\n}\n\nconst converter = new Showdown.Converter({\n  tables: true,\n  simplifiedAutoLink: true,\n  strikethrough: true,\n  tasklists: true,\n})\n\nconst EditContent = ({ content, onChange }: EditContentType) => {\n  const [selectedTab, setSelectedTab] = useState<EditorTabs>('write')\n  return (\n    <ReactMde\n      value={content}\n      onChange={onChange}\n      selectedTab={selectedTab}\n      onTabChange={setSelectedTab}\n      generateMarkdownPreview={(markdown) => Promise.resolve(converter.makeHtml(markdown))}\n    />\n  )\n}\n\nexport default EditContent\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\nimport Date from '../Date'\nimport { User } from '../../models'\nimport { Routes } from '../../constants'\n\ntype FollowUpUserInfo = {\n  user: User,\n  date: string,\n  role: 'Organizer' | 'Participant' | ''\n}\n\nconst FollowUpUserInfo = ({ date, user, role }: FollowUpUserInfo) => (\n  <div className=\"d-flex\">\n    <div className=\"bg-secondary mr-2 icon__user\">\n      <FontAwesomeIcon color=\"white\" size=\"lg\" icon={faUser} />\n    </div>\n    <div>\n      <h6>\n        <Link\n          to={Routes.Profile.replace(':id', user.id.toString())}\n        >\n          {user.displayName}\n        </Link>\n        {role === 'Organizer' ? ` - ${role}` : ''}\n      </h6>\n      <Date className=\"text-secondary\" date={date} />\n    </div>\n  </div>\n)\n\nexport default FollowUpUserInfo\n","import React, { useState } from 'react'\nimport { User } from '../../models'\nimport { Dropdown } from '../../components'\nimport { Content, EditContent } from '../content'\nimport { EditButton, SaveButton } from '../buttons'\nimport FollowUpUserInfo from './FollowUpUserInfo'\n\n\nexport const TestIDs ={\n  subMenu: 'followup-submenu'\n}\n\ntype FollowUpCard = {\n  followUp: FollowUp,\n  updateFollowUp: (followUp: FollowUp) => void,\n  canEdit: boolean,\n  user: User,\n  role: 'Organizer' | 'Participant' | ''\n}\n\nconst FollowUpButtons = ({ editOnPress, saveOnPress, editMode, id }: { editOnPress: () => void, saveOnPress: () => void, editMode: boolean, id: number }) => editMode\n  ? <SaveButton className=\"align-self-start\" type=\"Changes\" onClick={saveOnPress} />\n  : <Dropdown\n    id={`followup-dropdown-${id}`}\n    header=\"Options\"\n    testID={TestIDs.subMenu}\n    options={[\n      <EditButton className=\"align-self-start\" type=\"Follow Up\" onClick={editOnPress} key={`edit-followup-${id}`} color=\"link\" />,\n    ]}\n  />\n\nconst FollowUpCard = ({ followUp, updateFollowUp, canEdit, user, role }: FollowUpCard) => {\n  const [editMode, toggleEditMode] = useState(false)\n  const [content, updateContent] = useState(followUp.content)\n\n  const saveFollowUp = () => {\n    const fllwUp = { ...followUp }\n    fllwUp.content = content\n    updateFollowUp(fllwUp)\n    toggleEditMode(false)\n  }\n\n  const editOnPress = () => toggleEditMode(true)\n  return (\n    <div className=\"pt-2\">\n      <div className=\"d-flex justify-content-between\">\n        <FollowUpUserInfo user={user} date={followUp.date} role={role} />\n        {canEdit ? <FollowUpButtons id={followUp.id} editMode={editMode} saveOnPress={saveFollowUp} editOnPress={editOnPress} /> : null}\n      </div>\n      {editMode\n        ? <EditContent content={content} onChange={updateContent} />\n        : <Content className=\"ml-4 border-left pl-3\" content={content} />}\n    </div>\n  )\n}\n\nexport default FollowUpCard\n","import React, { useEffect, useState } from 'react'\nimport { Card } from 'reactstrap'\nimport {\n  HeartButton, CreateButton, SaveButton, CancelButton,\n} from '../buttons'\nimport Date from '../Date'\nimport { Content, EditContent } from '../content'\nimport { FollowUpCard } from '../follow-ups'\nimport modalDispatch from '../modal/dispatch'\nimport { Chat, User } from '../../models'\n\nrequire('./styles.scss')\n\ninterface ChatDetailProps {\n  chat: Chat,\n  followUps: Array<FollowUp>,\n  createFollowUp: (id: number, content: { content: string }) => void,\n  updateFollowUp: (followup: FollowUp) => void,\n  user: User,\n  getUserByID: (id: number) => User,\n}\n\nconst ChatDetail = ({\n  chat, followUps, createFollowUp, updateFollowUp, user, getUserByID\n}: ChatDetailProps) => {\n  const [addFollowUpMode, toggleAddFollowUpMode] = useState(false)\n  const [followUpContent, updateFollowUpContent] = useState('')\n\n  const saveNewFollowUp = () => {\n    createFollowUp(chat.id, { content: followUpContent })\n    toggleAddFollowUpMode(false)\n  }\n\n  const createOnPress = () => {\n    if (user.valid) {\n      Promise.resolve(toggleAddFollowUpMode(true))\n        .then(() => window.scrollTo(0, document.body.scrollHeight))\n    } else {\n      modalDispatch.auth()\n    }\n  }\n\n  /*\n   * Scrolls to the top of the page when the component is mounted.\n   * Sticky navbar causes a bug that keeps the scroll\n   * position when navigating to the chat detail.\n   */\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  if (chat.valid) {\n    return (\n      <Card body className=\"mb-3 border-0 shadow-sm\">\n        <div className=\"chat-detail-header\">\n          <h3 className=\"mr-3\">{chat.title}</h3>\n        </div>\n        <Date className=\"text-secondary\" date={chat.date} />\n        {chat.description ? <Content className=\"mb-4\" content={chat.description} /> : null}\n        <div className=\"mb-4\">\n          <HeartButton className=\"mr-2\" count={followUps.length} />\n          <CreateButton type=\"Follow Up\" onClick={createOnPress} />\n        </div>\n        <h5 className=\"mb-3\">\n          {followUps.length}\n          {' '}\n          Follow Ups\n        </h5>\n        {followUps.map((followUp) => {\n          const followUpUser = getUserByID(followUp.user)\n          const role = chat.getUserRole(followUp.user)\n          return (\n            <FollowUpCard\n              key={`FollowUpCard-${followUp.id}`}\n              followUp={followUp}\n              updateFollowUp={updateFollowUp}\n              user={followUpUser}\n              role={role}\n              canEdit={user?.id === followUpUser?.id}\n            />\n          )\n        })}\n        <hr />\n        {addFollowUpMode\n          ? (\n            <div>\n              <h5>Add New Follow Up:</h5>\n              <EditContent content={followUpContent} onChange={updateFollowUpContent} />\n              <div className=\"mt-2\">\n                <SaveButton type=\"Follow Up\" onClick={saveNewFollowUp} />\n                <CancelButton className=\"ml-2\" onClick={() => toggleAddFollowUpMode(false)} />\n              </div>\n            </div>\n          )\n          : <CreateButton type=\"Follow Up\" onClick={createOnPress} />}\n      </Card>\n    )\n  }\n  return <h1>Loading...</h1>\n}\n\nexport default ChatDetail\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Popover, PopoverHeader, PopoverBody } from 'reactstrap'\nimport { Link } from 'react-router-dom'\nimport * as selectors from '../../selectors'\nimport { RootState } from '../../reducers'\nimport User from '../../models/user'\n\ntype ParticipantListProps = {\n  className: string,\n  participants: Array<Participant>,\n  chatID: number,\n  getUserByID: (id: number) => User,\n}\n\nconst ParticipantList = ({ className, participants, chatID, getUserByID }: ParticipantListProps) => {\n  const [popoverOpen, setPopoverOpen] = useState(false)\n\n  const openPopover = () => setPopoverOpen(true)\n\n  const closePopover = () => setPopoverOpen(false)\n\n  const DISPLAYED_PARTICIPANTS = 5\n\n  return (\n    <div className={`${className} d-inline-flex`}>\n      <Link\n        to={`/chats/${chatID}`}\n        id={`ParticipantsPopover${chatID}`}\n        onMouseEnter={openPopover}\n        onMouseLeave={closePopover}\n      >\n        {participants.length}\n        {' '}\n        {participants.length > 1 ? 'Participants' : 'Participant'}\n      </Link>\n      <Popover placement=\"right-start\" isOpen={popoverOpen} target={`ParticipantsPopover${chatID}`} trigger=\"hover\">\n        <PopoverHeader>Participants</PopoverHeader>\n        <PopoverBody>\n          {participants.slice(0, DISPLAYED_PARTICIPANTS).map((p) => (\n            <p key={p.user} className=\"mb-0\">\n              {getUserByID(p.user).displayName}\n              {p.role === 'Organizer' ? ` - ${p.role}` : ''}\n            </p>\n          ))}\n          {participants.length > DISPLAYED_PARTICIPANTS\n            ? (\n              <p className=\"mb-0\">\n                and\n                {' '}\n                {participants.length - DISPLAYED_PARTICIPANTS}\n                {' '}\n                others\n              </p>\n            ) : null}\n        </PopoverBody>\n      </Popover>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  getUserByID: (id: string) => selectors.entities.getUserByID(state, id),\n})\n// @ts-ignore\nexport default connect(mapStateToProps)(ParticipantList)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n  Card,\n  CardTitle,\n} from 'reactstrap'\nimport Date from '../Date'\nimport { Content } from '../content'\nimport ParticipantList from './ParticipantList'\nimport { Chat } from '../../models'\n\n\ntype ChatCardProps = {\n  chat: Chat | undefined\n}\n\nconst ChatCard = ({ chat }: ChatCardProps) =>\n  chat ? (\n    <Card body className=\"mb-3 border-0 shadow-sm\">\n      <CardTitle tag=\"h5\">\n        <Link className=\"text-reset\" to={`/chats/${chat.id}`}>{chat.title}</Link>\n      </CardTitle>\n      <Date className=\"text-secondary\" date={chat.date} />\n      {chat.description\n        ? <Content content={chat.description} /> : null}\n      <div className=\"d-flex\">\n        <ParticipantList className=\"mr-2\" participants={chat.participants} chatID={chat.id} />\n      -\n      <Link className=\"ml-2\" to={`/chats/${chat.id}`}>\n          Follow Ups\n      </Link>\n      </div>\n    </Card>\n  ) : null\n\n\nexport default ChatCard\n","import React from 'react'\nimport { AnyAction } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { connect } from 'react-redux'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport InfiniteScroll from \"react-infinite-scroller\"\nimport { loadChatsList } from '../../actions/chat'\nimport { RootState } from '../../reducers'\nimport * as selectors from '../../selectors'\nimport ChatCard from './ChatCard'\nimport { Chat } from '../../models'\n\ntype StateProps = {\n  nextPageUrl: string,\n  chats: Array<number>,\n  getChatByID: (id: number) => Chat,\n  isFetching: boolean,\n}\n\ntype DispatchProps = {\n  loadChatsList: (nextPageUrl: string, key: string) => void,\n}\n\ntype OwnProps = {\n  filter: {key: string, query: string },\n}\n\ntype ChatListProps = StateProps & DispatchProps & OwnProps & RouteComponentProps<{}>\n\nconst ChatList = ({ chats, getChatByID, nextPageUrl, isFetching, loadChatsList, filter }: ChatListProps) => {\n  const loadMore = () => {\n    if (!isFetching) {\n      loadChatsList(nextPageUrl, filter.key)\n    }\n  }\n  return (\n    <div>\n      <InfiniteScroll\n        pageStart={1}\n        loadMore={loadMore}\n        hasMore={!!nextPageUrl && !isFetching}\n        loader={<div className=\"loader\" key={0}>Loading ...</div>}\n        threshold={200}\n      >\n        {chats.map((chatID: number) => (\n          <ChatCard chat={getChatByID(chatID)} key={`ChatCard-${chatID}`} />))}\n      </InfiniteScroll>\n    </div >\n  )\n}\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => {\n  const chatsPagination = selectors.pagination.getChatsPagination(state, ownProps.filter.key)\n  const { next: nextPageUrl } = chatsPagination\n  return {\n    chats: chatsPagination.ids,\n    nextPageUrl,\n    getChatByID: (id: number) => selectors.chats.getChatByID(state, id),\n    isFetching: selectors.pagination.isFetchingChats(state, ownProps.filter.key),\n  }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<{}, {}, AnyAction>) => ({\n  loadChatsList: (nextPageUrl: string, key: string) => dispatch(loadChatsList(nextPageUrl, key)),\n})\n\n// @ts-ignore\nconst ConnectedChatList: React.ComponentClass<OwnProps> = withRouter(connect(mapStateToProps, mapDispatchToProps)(ChatList))\nexport default ConnectedChatList\n","import React from 'react'\nimport { ChatList } from '../components'\n\n\nconst ChatsPage = () => (\n  <ChatList filter={{key: 'all', query: ''}}/>\n)\n\nexport default ChatsPage","// @flow\n\nimport React, { FunctionComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Redirect } from 'react-router-dom'\nimport * as selectors from '../../selectors'\nimport { User } from '../../models'\nimport { Routes } from '../../constants'\nimport { RootState } from '../../reducers'\nimport { CookieHelper } from '../../helpers'\n\ntype StateToPropsType = {\n  user: User,\n}\n\ntype PrivateRouteProps = StateToPropsType & {\n  component: FunctionComponent<any>,\n  exact?: boolean,\n  path: string,\n}\n\nconst PrivateRoute = (props: PrivateRouteProps) => {\n  const { component, user, path, exact } = props\n  const token = CookieHelper.getToken()\n  if (user.valid || token) {\n    return <Route exact={ exact } path = { path } component={component} />\n   }\n  return <Redirect to={ Routes.Home } />\n}\n\nconst mapStateToProps = (state: RootState): StateToPropsType => ({\n  user: selectors.user.getUser(state),\n})\n// @ts-ignore\nexport default connect(mapStateToProps)(PrivateRoute)\n","import React, { useEffect } from 'react'\nimport { AnyAction } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport {\n  createFollowUp, loadChatDetail, loadFollowUps, updateFollowUp,\n} from '../actions/chat'\nimport { ChatDetail } from '../components/chats'\nimport * as selectors from '../selectors'\nimport { RootState } from '../reducers'\nimport { Chat, User } from '../models'\n\ntype StateProps = {\n  id: number,\n  chat: Chat,\n  followUpsList: Array<FollowUp>,\n  user: User,\n  getUserByID: (id: number) => User,\n}\n\ntype DispatchProps = {\n  loadChatDetail: (id: number) => void,\n  loadFollowUps: (id: number, nextPageUrl?: string) => void,\n  createFollowUp: (chatID: number, content: { content: string }) => void,\n  updateFollowUp: (followup: FollowUp) => void,\n}\n\ntype ChatDetailPageProps = {\n  match: { params: { id: number } }\n} & DispatchProps & StateProps\n\nconst ChatDetailPage = ({\n  id, chat, followUpsList, loadChatDetail, loadFollowUps, createFollowUp, updateFollowUp, user, getUserByID,\n}: ChatDetailPageProps) => {\n  useEffect(() => {\n    loadChatDetail(id)\n    loadFollowUps(id)\n  }, [id, loadChatDetail, loadFollowUps])\n\n  return (\n    <ChatDetail\n      chat={chat}\n      followUps={followUpsList}\n      createFollowUp={createFollowUp}\n      updateFollowUp={updateFollowUp}\n      user={user}\n      getUserByID={getUserByID}\n    />\n  )\n}\n\nconst mapStateToProps = (state: RootState, ownProps: ChatDetailPageProps) => {\n  const { id } = ownProps.match.params\n  return {\n    id,\n    chat: selectors.chats.getChatByID(state, id),\n    followUpsList: selectors.chats.getFollowupsForChatID(state, id),\n    user: selectors.user.getUser(state),\n    getUserByID: (id: string) => selectors.entities.getUserByID(state, id),\n  }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<{}, {}, AnyAction>) => ({\n  loadChatDetail: (id: number) => dispatch(loadChatDetail(id)),\n  loadFollowUps: (chatID: number, nextPageUrl?: string) => dispatch(loadFollowUps(chatID, nextPageUrl)),\n  createFollowUp: (chatID: number, content: { content: string }) => dispatch(createFollowUp(chatID, content)),\n  updateFollowUp: (followUp: FollowUp) => dispatch(updateFollowUp(followUp)),\n})\n// @ts-ignore\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ChatDetailPage))\n","import React, { useEffect } from 'react'\nimport { AnyAction } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { connect } from 'react-redux'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { ChatList } from '../components'\nimport { User } from '../models'\nimport { RootState } from '../reducers'\nimport * as selectors from '../selectors'\nimport { loadChatsList } from '../actions/chat'\nimport ApiRoutes from '../constants'\n\ntype StateProps = {\n  user: User,\n  me: User,\n}\n\ntype DispatchProps = {\n  loadChatsList: (nextPageUrl?: string, userID?: string) => void,\n}\n\ntype TParams = { id: string };\n\ntype ChatPageProps = StateProps & DispatchProps & RouteComponentProps<TParams>\n\nconst ChatsPage = ({ loadChatsList, match, me, user }: ChatPageProps) => {\n  const { id } = match.params\n  useEffect(() => {\n    loadChatsList(ApiRoutes.userChats(id), id)\n  }, [loadChatsList])\n  const possesive = user?.id === me?.id ? 'My ' : `${user?.displayName}'s`\n  return (\n    <div>\n      <h1>{`${possesive} Chats`}</h1>\n      <ChatList filter={{key: id, query: `participants__user_id=${id}`}} />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: RootState, ownProps: ChatPageProps) => ({\n  me: selectors.user.getUser(state,),\n  user: selectors.entities.getUserByID(state, ownProps.match.params.id)\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<{}, {}, AnyAction>) => ({\n  // @ts-ignore\n  loadChatsList: (nextPageUrl: string, userID) => dispatch(loadChatsList(nextPageUrl, userID)),\n})\n\n// @ts-ignore\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatsPage)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux'\nimport { RouteComponentProps } from 'react-router-dom'\nimport queryString from 'query-string'\nimport { User } from '../models'\nimport { RootState } from '../reducers'\nimport { verifyEmail } from '../actions/user'\n\ntype StateProps = {\n  error: string | null,\n}\n\ntype DispatchProps = {\n  verify: (payload: { token: string, email: string }) => void,\n}\n\ntype VerifyPageProps = StateProps & DispatchProps & RouteComponentProps<{}>\n\nconst VerifyPage = ({ verify, location, error }: VerifyPageProps) => {\n  const parsed = queryString.parse(location.search);\n  useEffect(() => {\n    if (typeof parsed?.token === 'string' && typeof parsed?.email === 'string') {\n      verify({ token: parsed?.token, email: parsed?.email })\n    }\n  }, [verify])\n  const message = error ?  'There was an issue verifying your email 😞' : 'Thanks for verifying your email 🙂'\n  return (\n    <div>\n      <h1 className=\"text-center\">{message}</h1>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: RootState) => {\n  const { error } = state\n  return { error: error?.message }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<{}, {}, AnyAction>) => ({\n  verify: (payload: { token: string, email: string }) => dispatch(verifyEmail(payload))\n})\n\n// @ts-ignore\nexport default connect(mapStateToProps, mapDispatchToProps)(VerifyPage)\n","import React, { useEffect } from 'react'\nimport {\n  Switch, Route, Redirect,\n} from 'react-router-dom'\nimport { AnyAction } from 'redux'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { Container } from 'reactstrap'\nimport { Modal } from './components'\nimport { Navigation, Alert } from './components'\nimport ChatsPage from './pages/Chats'\nimport ChatDetailPage from './pages/ChatDetail'\nimport ProfilePage from './pages/Profile'\nimport VerifyPage from './pages/Verify'\nimport { bootstrap, logout } from './actions/user'\nimport * as selectors from './selectors'\nimport { RootState } from './reducers'\nimport { Routes } from './constants'\nimport { User } from './models'\n\ntype StateProps = {\n  user: User,\n}\n\ntype DispatchProps = {\n  dispatchBootstrap: () => void,\n  dispatchLogout: () => void,\n}\n\ntype Props = StateProps & DispatchProps\n\nconst App = (props: Props) => {\n  const { dispatchBootstrap, user, dispatchLogout } = props\n  useEffect(() => {\n    dispatchBootstrap()\n  }, [dispatchBootstrap])\n  return (\n    <>\n      <Navigation user={user} logout={dispatchLogout} />\n      <Container className=\"mt-3\">\n        <Switch>\n          <Route path={Routes.ChatDetail} component={ChatDetailPage} />\n          <Route path={Routes.Chats} component={ChatsPage} />\n          <Route path={Routes.VerifyEmail} component={VerifyPage} />\n          <Route path={Routes.Profile} component={ProfilePage} />\n          <Route path={Routes.Home}>\n            <Redirect to={Routes.Chats} />\n          </Route>\n        </Switch>\n        <Alert />\n        <Modal />\n      </Container>\n    </>\n  )\n}\n\nconst mapStateToProps = (state: RootState): StateProps => ({\n  user: selectors.user.getUser(state),\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<{}, {}, AnyAction>): DispatchProps => ({\n  dispatchBootstrap: () => dispatch(bootstrap()),\n  dispatchLogout: () => dispatch(logout()),\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\nimport store from './reducers'\nimport './style.css'\nimport App from './App'\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}