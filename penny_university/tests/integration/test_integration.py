import pytest

from rest_framework.test import APIClient

# TODO! move these to "the right place"
# TODO! test for
# * rest of penny chat flow
#   * including sending invites to others
# * reminders before chat
# * onboarding


@pytest.mark.django_db
def test_penny_chat_initiate_request(mocker):
    """This tests tests that a Penny Chat creation form is correctly displayed when a user types in `/penny chat`
    (Note that you also have to have the command hook set up correctly!)
    """
    mock_slack_client = mocker.Mock()
    user_info_resp = mocker.Mock()
    user_info_resp.data = {'ok': True, 'user': {'id': 'UNKEQA7CK', 'team_id': 'TNJ631DFU', 'name': 'jfberryman', 'deleted': False, 'color': '9f69e7', 'real_name': 'John Berryman', 'tz': 'America/Chicago', 'tz_label': 'Central Daylight Time', 'tz_offset': -18000, 'profile': {'title': '', 'phone': '', 'skype': '', 'real_name': 'John Berryman', 'real_name_normalized': 'John Berryman', 'display_name': '', 'display_name_normalized': '', 'status_text': '', 'status_emoji': '', 'status_expiration': 0, 'avatar_hash': 'g577bbd898a4', 'email': 'jfberryman@gmail.com', 'first_name': 'John', 'last_name': 'Berryman', 'image_24': 'https://secure.gravatar.com/avatar/577bbd898a44a99ec8cca0b76df6407a.jpg?s=24&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-24.png', 'image_32': 'https://secure.gravatar.com/avatar/577bbd898a44a99ec8cca0b76df6407a.jpg?s=32&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-32.png', 'image_48': 'https://secure.gravatar.com/avatar/577bbd898a44a99ec8cca0b76df6407a.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-48.png', 'image_72': 'https://secure.gravatar.com/avatar/577bbd898a44a99ec8cca0b76df6407a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png', 'image_192': 'https://secure.gravatar.com/avatar/577bbd898a44a99ec8cca0b76df6407a.jpg?s=192&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-192.png', 'image_512': 'https://secure.gravatar.com/avatar/577bbd898a44a99ec8cca0b76df6407a.jpg?s=512&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-512.png', 'status_text_canonical': '', 'team': 'TNJ631DFU'}, 'is_admin': True, 'is_owner': True, 'is_primary_owner': True, 'is_restricted': False, 'is_ultra_restricted': False, 'is_bot': False, 'is_app_user': False, 'updated': 1569899990}}  # noqa
    mock_slack_client.users_info.return_value = user_info_resp

    views_open_resp = mocker.Mock()
    views_open_resp.data = {'ok': True, 'view': {'id': 'V013RQ6Q7MK', 'team_id': 'TNJ631DFU', 'type': 'modal', 'blocks': [{'type': 'section', 'block_id': 'vPsi', 'text': {'type': 'mrkdwn', 'text': 'It looks like you want to create a new Penny Chat! Add a title, details, and date and then choose who you want to invite.', 'verbatim': False}}, {'type': 'input', 'block_id': 'penny_chat_title', 'label': {'type': 'plain_text', 'text': 'Title', 'emoji': True}, 'optional': False, 'element': {'type': 'plain_text_input', 'action_id': 'penny_chat_title', 'initial_value': ''}}, {'type': 'input', 'block_id': 'penny_chat_description', 'label': {'type': 'plain_text', 'text': 'Description', 'emoji': True}, 'hint': {'type': 'plain_text', 'text': 'Give people an idea of what this chat will be about. This is a great place to add a link to a Google hangout or an address for where you will meet.', 'emoji': True}, 'optional': False, 'element': {'type': 'plain_text_input', 'action_id': 'penny_chat_description', 'initial_value': '', 'multiline': True}}, {'type': 'section', 'block_id': 'BTeZu', 'text': {'type': 'mrkdwn', 'text': '*Pick a date for the Penny Chat* (All times are localized.)', 'verbatim': False}}, {'type': 'actions', 'block_id': 'tqCoX', 'elements': [{'type': 'datepicker', 'action_id': 'penny_chat_date', 'initial_date': '2020-05-17'}, {'type': 'static_select', 'action_id': 'penny_chat_time', 'initial_option': {'text': {'type': 'plain_text', 'text': '4:00 PM', 'emoji': True}, 'value': '4:00 PM'}, 'options': [{'text': {'type': 'plain_text', 'text': '12:00 AM', 'emoji': True}, 'value': '12:00 AM'}, {'text': {'type': 'plain_text', 'text': '12:15 AM', 'emoji': True}, 'value': '12:15 AM'}, {'text': {'type': 'plain_text', 'text': '12:30 AM', 'emoji': True}, 'value': '12:30 AM'}, {'text': {'type': 'plain_text', 'text': '12:45 AM', 'emoji': True}, 'value': '12:45 AM'}, {'text': {'type': 'plain_text', 'text': '1:00 AM', 'emoji': True}, 'value': '1:00 AM'}, {'text': {'type': 'plain_text', 'text': '1:15 AM', 'emoji': True}, 'value': '1:15 AM'}, {'text': {'type': 'plain_text', 'text': '1:30 AM', 'emoji': True}, 'value': '1:30 AM'}, {'text': {'type': 'plain_text', 'text': '1:45 AM', 'emoji': True}, 'value': '1:45 AM'}, {'text': {'type': 'plain_text', 'text': '2:00 AM', 'emoji': True}, 'value': '2:00 AM'}, {'text': {'type': 'plain_text', 'text': '2:15 AM', 'emoji': True}, 'value': '2:15 AM'}, {'text': {'type': 'plain_text', 'text': '2:30 AM', 'emoji': True}, 'value': '2:30 AM'}, {'text': {'type': 'plain_text', 'text': '2:45 AM', 'emoji': True}, 'value': '2:45 AM'}, {'text': {'type': 'plain_text', 'text': '3:00 AM', 'emoji': True}, 'value': '3:00 AM'}, {'text': {'type': 'plain_text', 'text': '3:15 AM', 'emoji': True}, 'value': '3:15 AM'}, {'text': {'type': 'plain_text', 'text': '3:30 AM', 'emoji': True}, 'value': '3:30 AM'}, {'text': {'type': 'plain_text', 'text': '3:45 AM', 'emoji': True}, 'value': '3:45 AM'}, {'text': {'type': 'plain_text', 'text': '4:00 AM', 'emoji': True}, 'value': '4:00 AM'}, {'text': {'type': 'plain_text', 'text': '4:15 AM', 'emoji': True}, 'value': '4:15 AM'}, {'text': {'type': 'plain_text', 'text': '4:30 AM', 'emoji': True}, 'value': '4:30 AM'}, {'text': {'type': 'plain_text', 'text': '4:45 AM', 'emoji': True}, 'value': '4:45 AM'}, {'text': {'type': 'plain_text', 'text': '5:00 AM', 'emoji': True}, 'value': '5:00 AM'}, {'text': {'type': 'plain_text', 'text': '5:15 AM', 'emoji': True}, 'value': '5:15 AM'}, {'text': {'type': 'plain_text', 'text': '5:30 AM', 'emoji': True}, 'value': '5:30 AM'}, {'text': {'type': 'plain_text', 'text': '5:45 AM', 'emoji': True}, 'value': '5:45 AM'}, {'text': {'type': 'plain_text', 'text': '6:00 AM', 'emoji': True}, 'value': '6:00 AM'}, {'text': {'type': 'plain_text', 'text': '6:15 AM', 'emoji': True}, 'value': '6:15 AM'}, {'text': {'type': 'plain_text', 'text': '6:30 AM', 'emoji': True}, 'value': '6:30 AM'}, {'text': {'type': 'plain_text', 'text': '6:45 AM', 'emoji': True}, 'value': '6:45 AM'}, {'text': {'type': 'plain_text', 'text': '7:00 AM', 'emoji': True}, 'value': '7:00 AM'}, {'text': {'type': 'plain_text', 'text': '7:15 AM', 'emoji': True}, 'value': '7:15 AM'}, {'text': {'type': 'plain_text', 'text': '7:30 AM', 'emoji': True}, 'value': '7:30 AM'}, {'text': {'type': 'plain_text', 'text': '7:45 AM', 'emoji': True}, 'value': '7:45 AM'}, {'text': {'type': 'plain_text', 'text': '8:00 AM', 'emoji': True}, 'value': '8:00 AM'}, {'text': {'type': 'plain_text', 'text': '8:15 AM', 'emoji': True}, 'value': '8:15 AM'}, {'text': {'type': 'plain_text', 'text': '8:30 AM', 'emoji': True}, 'value': '8:30 AM'}, {'text': {'type': 'plain_text', 'text': '8:45 AM', 'emoji': True}, 'value': '8:45 AM'}, {'text': {'type': 'plain_text', 'text': '9:00 AM', 'emoji': True}, 'value': '9:00 AM'}, {'text': {'type': 'plain_text', 'text': '9:15 AM', 'emoji': True}, 'value': '9:15 AM'}, {'text': {'type': 'plain_text', 'text': '9:30 AM', 'emoji': True}, 'value': '9:30 AM'}, {'text': {'type': 'plain_text', 'text': '9:45 AM', 'emoji': True}, 'value': '9:45 AM'}, {'text': {'type': 'plain_text', 'text': '10:00 AM', 'emoji': True}, 'value': '10:00 AM'}, {'text': {'type': 'plain_text', 'text': '10:15 AM', 'emoji': True}, 'value': '10:15 AM'}, {'text': {'type': 'plain_text', 'text': '10:30 AM', 'emoji': True}, 'value': '10:30 AM'}, {'text': {'type': 'plain_text', 'text': '10:45 AM', 'emoji': True}, 'value': '10:45 AM'}, {'text': {'type': 'plain_text', 'text': '11:00 AM', 'emoji': True}, 'value': '11:00 AM'}, {'text': {'type': 'plain_text', 'text': '11:15 AM', 'emoji': True}, 'value': '11:15 AM'}, {'text': {'type': 'plain_text', 'text': '11:30 AM', 'emoji': True}, 'value': '11:30 AM'}, {'text': {'type': 'plain_text', 'text': '11:45 AM', 'emoji': True}, 'value': '11:45 AM'}, {'text': {'type': 'plain_text', 'text': '12:00 PM', 'emoji': True}, 'value': '12:00 PM'}, {'text': {'type': 'plain_text', 'text': '12:15 PM', 'emoji': True}, 'value': '12:15 PM'}, {'text': {'type': 'plain_text', 'text': '12:30 PM', 'emoji': True}, 'value': '12:30 PM'}, {'text': {'type': 'plain_text', 'text': '12:45 PM', 'emoji': True}, 'value': '12:45 PM'}, {'text': {'type': 'plain_text', 'text': '1:00 PM', 'emoji': True}, 'value': '1:00 PM'}, {'text': {'type': 'plain_text', 'text': '1:15 PM', 'emoji': True}, 'value': '1:15 PM'}, {'text': {'type': 'plain_text', 'text': '1:30 PM', 'emoji': True}, 'value': '1:30 PM'}, {'text': {'type': 'plain_text', 'text': '1:45 PM', 'emoji': True}, 'value': '1:45 PM'}, {'text': {'type': 'plain_text', 'text': '2:00 PM', 'emoji': True}, 'value': '2:00 PM'}, {'text': {'type': 'plain_text', 'text': '2:15 PM', 'emoji': True}, 'value': '2:15 PM'}, {'text': {'type': 'plain_text', 'text': '2:30 PM', 'emoji': True}, 'value': '2:30 PM'}, {'text': {'type': 'plain_text', 'text': '2:45 PM', 'emoji': True}, 'value': '2:45 PM'}, {'text': {'type': 'plain_text', 'text': '3:00 PM', 'emoji': True}, 'value': '3:00 PM'}, {'text': {'type': 'plain_text', 'text': '3:15 PM', 'emoji': True}, 'value': '3:15 PM'}, {'text': {'type': 'plain_text', 'text': '3:30 PM', 'emoji': True}, 'value': '3:30 PM'}, {'text': {'type': 'plain_text', 'text': '3:45 PM', 'emoji': True}, 'value': '3:45 PM'}, {'text': {'type': 'plain_text', 'text': '4:00 PM', 'emoji': True}, 'value': '4:00 PM'}, {'text': {'type': 'plain_text', 'text': '4:15 PM', 'emoji': True}, 'value': '4:15 PM'}, {'text': {'type': 'plain_text', 'text': '4:30 PM', 'emoji': True}, 'value': '4:30 PM'}, {'text': {'type': 'plain_text', 'text': '4:45 PM', 'emoji': True}, 'value': '4:45 PM'}, {'text': {'type': 'plain_text', 'text': '5:00 PM', 'emoji': True}, 'value': '5:00 PM'}, {'text': {'type': 'plain_text', 'text': '5:15 PM', 'emoji': True}, 'value': '5:15 PM'}, {'text': {'type': 'plain_text', 'text': '5:30 PM', 'emoji': True}, 'value': '5:30 PM'}, {'text': {'type': 'plain_text', 'text': '5:45 PM', 'emoji': True}, 'value': '5:45 PM'}, {'text': {'type': 'plain_text', 'text': '6:00 PM', 'emoji': True}, 'value': '6:00 PM'}, {'text': {'type': 'plain_text', 'text': '6:15 PM', 'emoji': True}, 'value': '6:15 PM'}, {'text': {'type': 'plain_text', 'text': '6:30 PM', 'emoji': True}, 'value': '6:30 PM'}, {'text': {'type': 'plain_text', 'text': '6:45 PM', 'emoji': True}, 'value': '6:45 PM'}, {'text': {'type': 'plain_text', 'text': '7:00 PM', 'emoji': True}, 'value': '7:00 PM'}, {'text': {'type': 'plain_text', 'text': '7:15 PM', 'emoji': True}, 'value': '7:15 PM'}, {'text': {'type': 'plain_text', 'text': '7:30 PM', 'emoji': True}, 'value': '7:30 PM'}, {'text': {'type': 'plain_text', 'text': '7:45 PM', 'emoji': True}, 'value': '7:45 PM'}, {'text': {'type': 'plain_text', 'text': '8:00 PM', 'emoji': True}, 'value': '8:00 PM'}, {'text': {'type': 'plain_text', 'text': '8:15 PM', 'emoji': True}, 'value': '8:15 PM'}, {'text': {'type': 'plain_text', 'text': '8:30 PM', 'emoji': True}, 'value': '8:30 PM'}, {'text': {'type': 'plain_text', 'text': '8:45 PM', 'emoji': True}, 'value': '8:45 PM'}, {'text': {'type': 'plain_text', 'text': '9:00 PM', 'emoji': True}, 'value': '9:00 PM'}, {'text': {'type': 'plain_text', 'text': '9:15 PM', 'emoji': True}, 'value': '9:15 PM'}, {'text': {'type': 'plain_text', 'text': '9:30 PM', 'emoji': True}, 'value': '9:30 PM'}, {'text': {'type': 'plain_text', 'text': '9:45 PM', 'emoji': True}, 'value': '9:45 PM'}, {'text': {'type': 'plain_text', 'text': '10:00 PM', 'emoji': True}, 'value': '10:00 PM'}, {'text': {'type': 'plain_text', 'text': '10:15 PM', 'emoji': True}, 'value': '10:15 PM'}, {'text': {'type': 'plain_text', 'text': '10:30 PM', 'emoji': True}, 'value': '10:30 PM'}, {'text': {'type': 'plain_text', 'text': '10:45 PM', 'emoji': True}, 'value': '10:45 PM'}, {'text': {'type': 'plain_text', 'text': '11:00 PM', 'emoji': True}, 'value': '11:00 PM'}, {'text': {'type': 'plain_text', 'text': '11:15 PM', 'emoji': True}, 'value': '11:15 PM'}, {'text': {'type': 'plain_text', 'text': '11:30 PM', 'emoji': True}, 'value': '11:30 PM'}, {'text': {'type': 'plain_text', 'text': '11:45 PM', 'emoji': True}, 'value': '11:45 PM'}]}]}, {'type': 'section', 'block_id': 'D8hn3', 'text': {'type': 'mrkdwn', 'text': '*Who do you want to invite?*', 'verbatim': False}, 'accessory': {'type': 'multi_users_select', 'action_id': 'penny_chat_user_select', 'initial_users': [], 'placeholder': {'type': 'plain_text', 'text': 'Select Users', 'emoji': True}}}, {'type': 'section', 'block_id': '56o', 'text': {'type': 'mrkdwn', 'text': '*Which channels should I share this with?*', 'verbatim': False}, 'accessory': {'type': 'multi_channels_select', 'action_id': 'penny_chat_channel_select', 'initial_channels': [], 'placeholder': {'type': 'plain_text', 'text': 'Select Channels', 'emoji': True}}}], 'private_metadata': '', 'callback_id': 'penny_chat_details', 'state': {'values': {'penny_chat_title': {'penny_chat_title': {'type': 'plain_text_input', 'value': ''}}, 'penny_chat_description': {'penny_chat_description': {'type': 'plain_text_input', 'value': ''}}}}, 'hash': '1589751947.0dd54fc4', 'title': {'type': 'plain_text', 'text': 'Penny Chat Details', 'emoji': True}, 'clear_on_close': False, 'notify_on_close': True, 'close': None, 'submit': {'type': 'plain_text', 'text': 'Share Invite :the_horns:', 'emoji': True}, 'previous_view_id': None, 'root_view_id': 'V013RQ6Q7MK', 'app_id': 'ANWFBKKRS', 'external_id': '', 'app_installed_team_id': 'TNJ631DFU', 'bot_id': 'BNQGKD2RX'}}  # noqa
    mock_slack_client.views_open.return_value = views_open_resp

    with mocker.patch('common.utils.get_slack_client', return_value=mock_slack_client):
        response_for_bot_command = APIClient().post('/bot/command/', b'token=5jmgqD3qXz6uXIkShw3MmZ8j&team_id=TNJ631DFU&team_domain=pennyjohn&channel_id=CNQG95KG9&channel_name=general&user_id=UNKEQA7CK&user_name=jfberryman&command=%2Fpenny&text=chat&response_url=https%3A%2F%2Fhooks.slack.com%2Fcommands%2FTNJ631DFU%2F1141824991441%2FgJQHhTpfIKx6KrHKQHIzUxbC&trigger_id=1135381179188.766207047538.303978764b6b3667c0a1347450f47b48', content_type='application/x-www-form-urlencoded')  # noqa
    views_open_args = str(mock_slack_client.views_open.call_args[1]['view'])

    assert 'Penny Chat Details' in views_open_args, 'does the form have a reasonable title?'
    assert 'create a new Penny Chat' in views_open_args, 'are we telling them the point of the form?'
    assert 'Title' in views_open_args, 'are we asking them to give us a title?'
    assert 'Description' in views_open_args, 'are we asking them to give us a description?'
    assert 'Pick a date' in views_open_args, 'are we asking them to give us a date?'
    assert 'Who' in views_open_args, 'are we asking them to invite people'
    assert 'Which channels' in views_open_args, 'are we asking them to invite channels?'
    assert response_for_bot_command.status_code == 200
